{"version":3,"sources":["components/Counter/FeedbackOptions/FeedbackOptions.jsx","components/Counter/Statistics/Statistics.jsx","components/Counter/Section/Section.jsx","components/Counter/Notification/Notification.jsx","components/Counter/Counter.jsx","App.js","index.js","components/Counter/FeedbackOptions/FeedbackOptions.module.css"],"names":["FeedbackOptions","options","addFeedback","map","option","type","className","s","cornerButton","name","value","onClick","Statistics","total","percentage","good","neutral","bad","Section","title","children","Notification","message","Counter","state","props","initialValue","e","target","setState","prevState","countTotalFeedback","countPositiveFeedbackPercentage","totalFeedback","Math","floor","this","Component","defaultProps","App","ReactDOM","render","StrictMode","document","getElementById","module","exports"],"mappings":"sTAwBeA,EArBS,SAAC,GAA8B,IAA5BC,EAA2B,EAA3BA,QAASC,EAAkB,EAAlBA,YAClC,OAAOD,EAAQE,KAAI,SAAAC,GACjB,OACE,gCACE,uBACEC,KAAK,SACLC,UAAWC,IAAEC,aACbC,KAAML,EACNM,MAAON,EACPO,QAAST,KANDE,OCcHQ,MAlBf,YAA6E,IAAvDC,EAAsD,EAAtDA,MAAOC,EAA+C,EAA/CA,WAA+C,IAAnCb,QAAWc,EAAwB,EAAxBA,KAAMC,EAAkB,EAAlBA,QAASC,EAAS,EAATA,IACjE,OACE,gCACE,uCAAUF,KACV,0CAAaC,KACb,sCAASC,KACT,wCAAWJ,KACX,mDAAsBC,SCObI,MAdf,YAAuC,IAApBC,EAAmB,EAAnBA,MAAOC,EAAY,EAAZA,SACxB,OACE,oCACE,6BAAKD,IACJC,MCIQC,MARf,YAAoC,IAAZC,EAAW,EAAXA,QACtB,OAAO,4BAAIA,KCIPC,E,4MAKJC,MAAQ,CACNT,KAAM,EAAKU,MAAMC,aACjBV,QAAS,EAAKS,MAAMC,aACpBT,IAAK,EAAKQ,MAAMC,c,EAGlBxB,YAAc,SAAAyB,GACZ,IAAMlB,EAAOkB,EAAEC,OAAOnB,KAEtB,EAAKoB,UAAS,SAAAC,GAAS,sBACpBrB,EAAOqB,EAAUrB,GAAQ,O,EAI9BsB,mBAAqB,WACnB,MAA+B,EAAKP,MAEpC,OAFA,EAAQT,KAAR,EAAcC,QAAd,EAAuBC,K,EAIzBe,gCAAkC,WAChC,IAAQjB,EAAS,EAAKS,MAAdT,KACFkB,EAAgB,EAAKF,qBAE3B,OADmBG,KAAKC,MAAc,IAAPpB,EAAckB,I,4CAI/C,WACE,IAAMpB,EAAQuB,KAAKL,qBACbjB,EAAasB,KAAKJ,kCAExB,OACE,gCACE,cAAC,EAAD,CAASb,MAAO,wBAAhB,SACE,cAAC,EAAD,CACElB,QAAS,CAAC,OAAQ,UAAW,OAC7BC,YAAakC,KAAKlC,gBAIX,IAAVW,EACC,cAAC,EAAD,CAAcS,QAAS,sBAEvB,cAAC,EAAD,CAASH,MAAO,aAAhB,SACE,cAAC,EAAD,CACElB,QAASmC,KAAKZ,MACdX,MAAOA,EACPC,WAAYA,a,GAnDJuB,aAAhBd,EACGe,aAAe,CACpBZ,aAAc,GA0DHH,QCxDAgB,MARf,WACE,OACE,qBAAKjC,UAAU,MAAf,SACE,cAAC,EAAD,OCDNkC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,U,kBCR1BC,EAAOC,QAAU,CAAC,aAAe,yC","file":"static/js/main.eb59dcf0.chunk.js","sourcesContent":["import PropTypes from 'prop-types';\nimport s from 'components/Counter/FeedbackOptions/FeedbackOptions.module.css';\n\nconst FeedbackOptions = ({ options, addFeedback }) => {\n  return options.map(option => {\n    return (\n      <label key={option}>\n        <input\n          type=\"submit\"\n          className={s.cornerButton}\n          name={option}\n          value={option}\n          onClick={addFeedback}\n        />\n      </label>\n    );\n  });\n};\n\nFeedbackOptions.propTypes = {\n  options: PropTypes.arrayOf(PropTypes.string.isRequired).isRequired,\n  addFeedback: PropTypes.func.isRequired,\n};\n\nexport default FeedbackOptions;\n","import PropTypes from 'prop-types';\n\nfunction Statistics({ total, percentage, options: { good, neutral, bad } }) {\n  return (\n    <div>\n      <p>Good: {good}</p>\n      <p>Neutral: {neutral}</p>\n      <p>Bad: {bad}</p>\n      <p>Total: {total}</p>\n      <p>Positiv Feedback: {percentage}</p>\n    </div>\n  );\n}\n\nStatistics.propTypes = {\n  total: PropTypes.number.isRequired,\n  percentage: PropTypes.number.isRequired,\n  options: PropTypes.objectOf(PropTypes.number.isRequired).isRequired,\n};\n\nexport default Statistics;\n","import PropTypes from 'prop-types';\n\nfunction Section({ title, children }) {\n  return (\n    <section>\n      <h2>{title}</h2>\n      {children}\n    </section>\n  );\n}\n\nSection.propTypes = {\n  title: PropTypes.string,\n  children: PropTypes.node,\n};\n\nexport default Section;\n","import PropTypes from 'prop-types';\n\nfunction Notification({ message }) {\n  return <p>{message}</p>;\n}\n\nNotification.propTypes = {\n  message: PropTypes.string,\n};\n\nexport default Notification;\n","import React, { Component } from 'react';\n// import s from 'components/Counter/Counter.module.css';\nimport FeedbackOptions from 'components/Counter/FeedbackOptions';\nimport Statistics from 'components/Counter/Statistics';\nimport Section from 'components/Counter/Section';\nimport Notification from 'components/Counter/Notification';\n\nclass Counter extends Component {\n  static defaultProps = {\n    initialValue: 0,\n  };\n\n  state = {\n    good: this.props.initialValue,\n    neutral: this.props.initialValue,\n    bad: this.props.initialValue,\n  };\n\n  addFeedback = e => {\n    const name = e.target.name;\n\n    this.setState(prevState => ({\n      [name]: prevState[name] + 1,\n    }));\n  };\n\n  countTotalFeedback = () => {\n    const { good, neutral, bad } = this.state;\n    const total = good + neutral + bad;\n    return total;\n  };\n  countPositiveFeedbackPercentage = () => {\n    const { good } = this.state;\n    const totalFeedback = this.countTotalFeedback();\n    const percentage = Math.floor((good * 100) / totalFeedback);\n    return percentage;\n  };\n\n  render() {\n    const total = this.countTotalFeedback();\n    const percentage = this.countPositiveFeedbackPercentage();\n\n    return (\n      <div>\n        <Section title={'Please leave feedback'}>\n          <FeedbackOptions\n            options={['good', 'neutral', 'bad']}\n            addFeedback={this.addFeedback}\n          />\n        </Section>\n\n        {total === 0 ? (\n          <Notification message={'No feedback given'} />\n        ) : (\n          <Section title={'Statistics'}>\n            <Statistics\n              options={this.state}\n              total={total}\n              percentage={percentage}\n            />\n          </Section>\n        )}\n      </div>\n    );\n  }\n}\n\nexport default Counter;\n","import './App.css';\nimport Counter from 'components/Counter';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Counter />\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"cornerButton\":\"FeedbackOptions_cornerButton__3HlUM\"};"],"sourceRoot":""}