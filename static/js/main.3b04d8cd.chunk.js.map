{"version":3,"sources":["components/Counter/FeedbackOptions/FeedbackOptions.module.css","components/Counter/FeedbackOptions/FeedbackOptions.jsx","components/Counter/Statistics/Statistics.jsx","components/Counter/Section/Section.jsx","components/Counter/Notification/Notification.jsx","components/Counter/Counter.jsx","App.js","index.js"],"names":["module","exports","FeedbackOptions","options","addFeedback","map","option","type","className","s","cornerButton","name","value","onClick","Statistics","total","percentage","good","neutral","bad","Section","title","children","Notification","message","Counter","useState","setGood","setNeutral","setBad","countTotalFeedback","totalFeedback","Math","floor","countPositiveFeedbackPercentage","e","target","prev","console","log","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"8IACAA,EAAOC,QAAU,CAAC,aAAe,wC,6JCuBlBC,EArBS,SAAC,GAA8B,IAA5BC,EAA2B,EAA3BA,QAASC,EAAkB,EAAlBA,YAClC,OAAOD,EAAQE,KAAI,SAAAC,GACjB,OACE,gCACE,uBACEC,KAAK,SACLC,UAAWC,IAAEC,aACbC,KAAML,EACNM,MAAON,EACPO,QAAST,KANDE,OCkBHQ,MAtBf,YAAgE,IAA1CC,EAAyC,EAAzCA,MAAOC,EAAkC,EAAlCA,WAAYC,EAAsB,EAAtBA,KAAMC,EAAgB,EAAhBA,QAASC,EAAO,EAAPA,IAEtD,OACE,gCACE,uCAAUF,KACV,0CAAaC,KACb,sCAASC,KACT,wCAAWJ,KACX,mDAAsBC,SCMbI,MAdf,YAAuC,IAApBC,EAAmB,EAAnBA,MAAOC,EAAY,EAAZA,SACxB,OACE,oCACE,6BAAKD,IACJC,MCIQC,MARf,YAAoC,IAAZC,EAAW,EAAXA,QACtB,OAAO,4BAAIA,KCuEEC,MAnEf,WACE,IAEA,EAAwBC,mBAFH,GAErB,mBAAOT,EAAP,KAAaU,EAAb,KACA,EAA8BD,mBAHT,GAGrB,mBAAOR,EAAP,KAAgBU,EAAhB,KACA,EAAsBF,mBAJD,GAIrB,mBAAOP,EAAP,KAAYU,EAAZ,KAqBMC,EAAqB,WAGzB,OADcb,EAAOC,EAAUC,GAS3BJ,EAAQe,IACRd,EAPkC,WACtC,IAAMe,EAAgBD,IAEtB,OADmBE,KAAKC,MAAc,IAAPhB,EAAcc,GAK5BG,GAEnB,OACE,gCACE,cAAC,EAAD,CAASb,MAAO,wBAAhB,SACE,cAAC,EAAD,CACElB,QAAS,CAAC,OAAQ,UAAW,OAC7BC,YAtCY,SAAA+B,GAGlB,OAFaA,EAAEC,OAAOzB,MAGpB,IAAK,OACHgB,GAAQ,SAAAU,GAAI,OAAIA,EAAO,KACvB,MACF,IAAK,UACHT,GAAW,SAAAS,GAAI,OAAIA,EAAO,KAC1B,MACF,IAAK,MACHR,GAAO,SAAAQ,GAAI,OAAIA,EAAO,KACtBC,QAAQC,IAAIpB,GACZ,MACF,QACE,aA2BS,IAAVJ,EACC,cAAC,EAAD,CAAcS,QAAS,sBAEvB,cAAC,EAAD,CAASH,MAAO,aAAhB,SACE,cAAC,EAAD,CACEJ,KAAMA,EACNC,QAASA,EACTC,IAAKA,EAELJ,MAAOA,EACPC,WAAYA,UCvDTwB,MARf,WACE,OACE,qBAAKhC,UAAU,MAAf,SACE,cAAC,EAAD,OCDNiC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.3b04d8cd.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"cornerButton\":\"FeedbackOptions_cornerButton__3HlUM\"};","import PropTypes from 'prop-types';\nimport s from 'components/Counter/FeedbackOptions/FeedbackOptions.module.css';\n\nconst FeedbackOptions = ({ options, addFeedback }) => {\n  return options.map(option => {\n    return (\n      <label key={option}>\n        <input\n          type=\"submit\"\n          className={s.cornerButton}\n          name={option}\n          value={option}\n          onClick={addFeedback}\n        />\n      </label>\n    );\n  });\n};\n\nFeedbackOptions.propTypes = {\n  options: PropTypes.arrayOf(PropTypes.string.isRequired).isRequired,\n  addFeedback: PropTypes.func.isRequired,\n};\n\nexport default FeedbackOptions;\n","import PropTypes from 'prop-types';\n\nfunction Statistics({ total, percentage, good, neutral, bad }) {\n  // console.log(total, percentage, good, neutral, bad);\n  return (\n    <div>\n      <p>Good: {good}</p>\n      <p>Neutral: {neutral}</p>\n      <p>Bad: {bad}</p>\n      <p>Total: {total}</p>\n      <p>Positiv Feedback: {percentage}</p>\n    </div>\n  );\n}\n\nStatistics.propTypes = {\n  total: PropTypes.number.isRequired,\n  percentage: PropTypes.number.isRequired,\n  // options: PropTypes.objectOf(PropTypes.number.isRequired).isRequired,\n  good: PropTypes.number.isRequired,\n  neutral: PropTypes.number.isRequired,\n  bad: PropTypes.number.isRequired,\n};\n\nexport default Statistics;\n","import PropTypes from 'prop-types';\n\nfunction Section({ title, children }) {\n  return (\n    <section>\n      <h2>{title}</h2>\n      {children}\n    </section>\n  );\n}\n\nSection.propTypes = {\n  title: PropTypes.string,\n  children: PropTypes.node,\n};\n\nexport default Section;\n","import PropTypes from 'prop-types';\n\nfunction Notification({ message }) {\n  return <p>{message}</p>;\n}\n\nNotification.propTypes = {\n  message: PropTypes.string,\n};\n\nexport default Notification;\n","import { useState } from 'react';\n// import s from 'components/Counter/Counter.module.css';\nimport FeedbackOptions from 'components/Counter/FeedbackOptions';\nimport Statistics from 'components/Counter/Statistics';\nimport Section from 'components/Counter/Section';\nimport Notification from 'components/Counter/Notification';\n\nfunction Counter() {\n  const initialValue = 0;\n\n  const [good, setGood] = useState(initialValue);\n  const [neutral, setNeutral] = useState(initialValue);\n  const [bad, setBad] = useState(initialValue);\n\n  const addFeedback = e => {\n    const name = e.target.name;\n\n    switch (name) {\n      case 'good':\n        setGood(prev => prev + 1);\n        break;\n      case 'neutral':\n        setNeutral(prev => prev + 1);\n        break;\n      case 'bad':\n        setBad(prev => prev + 1);\n        console.log(bad);\n        break;\n      default:\n        return;\n    }\n  };\n\n  const countTotalFeedback = () => {\n    // console.log(good, neutral, bad);\n    const total = good + neutral + bad;\n    return total;\n  };\n  const countPositiveFeedbackPercentage = () => {\n    const totalFeedback = countTotalFeedback();\n    const percentage = Math.floor((good * 100) / totalFeedback);\n    return percentage;\n  };\n\n  const total = countTotalFeedback();\n  const percentage = countPositiveFeedbackPercentage();\n\n  return (\n    <div>\n      <Section title={'Please leave feedback'}>\n        <FeedbackOptions\n          options={['good', 'neutral', 'bad']}\n          addFeedback={addFeedback}\n        />\n      </Section>\n\n      {total === 0 ? (\n        <Notification message={'No feedback given'} />\n      ) : (\n        <Section title={'Statistics'}>\n          <Statistics\n            good={good}\n            neutral={neutral}\n            bad={bad}\n            // options={(good, neutral, bad)}\n            total={total}\n            percentage={percentage}\n          />\n        </Section>\n      )}\n    </div>\n  );\n}\n\nexport default Counter;\n","import './App.css';\nimport Counter from 'components/Counter';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Counter />\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}